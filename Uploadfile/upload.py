import streamlit as st
import pandas as pd

def upload_file():
    st.set_page_config(page_title="Wong-Wai", page_icon=":pushpin:", layout="wide")
    image_path = "IMG_6027.png" 
    st.image(image_path, width=300 ) #use_container_width =True
    st.title("Wong-Wai AI")
    st.write("AI for Detection and Handling Social Media Crisis Management")
    st.title("Upload your file")

    # ‡πÅ‡∏ö‡πà‡∏á layout ‡πÄ‡∏õ‡πá‡∏ô 2 ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå (‡∏ã‡πâ‡∏≤‡∏¢‡πÄ‡∏•‡πá‡∏Å‡∏Å‡∏ß‡πà‡∏≤)
    col1, col2 = st.columns([1, 2])

    with col1:
        st.subheader("üìÇ Upload File")
        uploaded_file = st.file_uploader("Choose a file", type=["xlsx", "csv"])

    selected_data = None

    if uploaded_file is not None:
        with col1:
            st.subheader("üîç Select Columns")

        with col2:
            st.subheader("üìä Data Preview")
            
            # ‡∏≠‡πà‡∏≤‡∏ô‡πÑ‡∏ü‡∏•‡πå CSV ‡∏´‡∏£‡∏∑‡∏≠ Excel
            if uploaded_file.name.endswith(".csv"):
                df = pd.read_csv(uploaded_file)
            elif uploaded_file.name.endswith(".xlsx"):
                xls = pd.ExcelFile(uploaded_file)
                sheet_names = xls.sheet_names
                selected_sheet = st.selectbox("Choose a sheet", sheet_names)
                df = pd.read_excel(uploaded_file, sheet_name=selected_sheet)

            df = df.applymap(str)  # ‡πÅ‡∏õ‡∏•‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏õ‡πá‡∏ô string
            st.write(df.head())  # ‡πÅ‡∏™‡∏î‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á
        
        with col1:  # ‡∏Å‡∏•‡πà‡∏≠‡∏á‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏≠‡∏¢‡∏π‡πà‡∏ù‡∏±‡πà‡∏á‡∏ã‡πâ‡∏≤‡∏¢
            column1 = st.selectbox("Select first column", df.columns.tolist(), key="col1")

            # # ‡∏Å‡∏£‡∏≠‡∏á‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡πÇ‡∏î‡∏¢‡πÑ‡∏°‡πà‡∏£‡∏ß‡∏° column1
            # available_columns_2 = [col for col in df.columns if col != column1]
            # column2 = st.selectbox("Select sentiment answer", available_columns_2, key="col2")

            # # ‡∏Å‡∏£‡∏≠‡∏á‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡πÇ‡∏î‡∏¢‡πÑ‡∏°‡πà‡∏£‡∏ß‡∏° column1 ‡πÅ‡∏•‡∏∞ column2
            # available_columns_3 = [col for col in df.columns if col not in [column1, column2]]
            # column3 = st.selectbox("Select classify answer", available_columns_3, key="col3")


        with col2:  # ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏õ‡∏≠‡∏¢‡∏π‡πà‡∏ù‡∏±‡πà‡∏á‡∏Ç‡∏ß‡∏≤
            if column1:
                selected_data = df[[column1]].values.tolist()
                st.subheader("üìå Selected Data")
                st.write(selected_data)
            # if column1 and column2 and column3:
            #     selected_data = df[[column1, column2, column3]].values.tolist()
            #     st.subheader("üìå Selected Data")
            #     st.write(selected_data)

    return selected_data
